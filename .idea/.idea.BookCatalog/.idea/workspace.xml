<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile kind="Docker">BookCatalog.API/BookCatalog.API.csproj</projectFile>
    <projectFile profileName="IIS Express">BookCatalog.API/BookCatalog.API.csproj</projectFile>
    <projectFile profileName="http">BookCatalog.API/BookCatalog.API.csproj</projectFile>
    <projectFile profileName="https">BookCatalog.API/BookCatalog.API.csproj</projectFile>
    <projectFile kind="Docker">BookCatalog.Frontend/BookCatalog.Frontend.csproj</projectFile>
    <projectFile profileName="IIS Express">BookCatalog.Frontend/BookCatalog.Frontend.csproj</projectFile>
    <projectFile profileName="http">BookCatalog.Frontend/BookCatalog.Frontend.csproj</projectFile>
    <projectFile profileName="https">BookCatalog.Frontend/BookCatalog.Frontend.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1f264b09-a10a-4409-964e-b49258fcacf0" name="Changes" comment="Integrate SignalR for real-time book updates&#10;&#10;Added SignalR support for real-time updates in both backend and frontend. Backend changes include a new `BooksHub` for notifications and updates to `BooksEndpoints`. Frontend now listens to real-time events like `BookAdded`, `BookUpdated`, and `BookDeleted` for dynamic UI refreshes. Additionally, logging and Serilog were configured for enhanced monitoring.">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.BookCatalog/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.BookCatalog/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/BookCatalog.API/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BookCatalog.API/Program.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/BookCatalog.API/SwaggerExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BookCatalog.API/SwaggerExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" show_ignored="true" />
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CSS File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitlabMajeraCodeReviewSettings">
    <option name="popularEmojiShortcuts">
      <list />
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/63059da4dc70403db49a4a2073b8bc023a0a0/a0/6681034b/NavigationManager.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/6c8ca52d70f6435ebb144378daa6c59717878/f6/d83a188d/IWebAssemblyHostEnvironment.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/c5a0a59f4fe94472b758b1fb5fa6028d13930/bf/036bc65d/IHost.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/d7f3928d213f49c08a80ef3cc6f720993200/77/2487399c/LoggerEnrichmentConfigurationExtensions.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/2d861df98593f86185428986f10ec394e76649fdf4e9e17934f13c4504dd645/RateLimiterServiceCollectionExtensions.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/4dd5338dd6979df9518546eba3f77d8f859a1c5e160652f851ff244beae562/RateLimitPartition.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/4e525246c8d29f6e83cbf39d87e36d08fffa09733e43382b9629ca6aa31541/RateLimiterOptions.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/621526284d3e4868b98948aff942206525763e57e194a27623b66c384466/ServiceProviderServiceExtensions.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/66fb396b9859c8734ef8e8dd529955858164ba8a4e32d9085dd3099d5c9127b/List.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/b37bdcda3df384671c8eed0dd528e74eff6e04eeb7b1e81f219e5e066318/ComponentBase.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/bd1d5c50194fea68ff3559c160230b0ab50f5acf4ce3061bffd6d62958e2182/ExceptionDispatchInfo.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/f16564c8c4b61e6ea398fe412680c6b795b266584ccf6a362aed712dc4d2b387/WebApplication.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/projects/blazor-book-catalog/BookCatalog.API/Repositories/BookRepository.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/BookCatalog.Frontend/Pages/Books/Books.razor" root0="FORCE_HIGHLIGHTING" root1="FORCE_HIGHLIGHTING" root2="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/BookCatalog.Frontend/wwwroot/css/bootstrap/bootstrap.min.css.map" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2rP2ThfbPQTV7Vn33LueSPObcjk" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;.NET Launch Settings Profile.BookCatalog.API: http.executor&quot;: &quot;Debug&quot;,
    &quot;.NET Launch Settings Profile.BookCatalog.Frontend: http.executor&quot;: &quot;Debug&quot;,
    &quot;Attach to Process.15064:BookCatalog.API.executor&quot;: &quot;Debug&quot;,
    &quot;Compound.API + Frontend.executor&quot;: &quot;Debug&quot;,
    &quot;Docker.BookCatalog.API/Dockerfile.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;ssh.settings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="LaunchSettings" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Compound.API + Frontend">
    <configuration name="API + Frontend" type="CompoundRunConfigurationType">
      <toRun name="BookCatalog.API: http" type="LaunchSettings" />
      <toRun name="BookCatalog.Frontend: http" type="LaunchSettings" />
      <method v="2" />
    </configuration>
    <configuration name="BookCatalog.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BookCatalog.API/BookCatalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="BookCatalog.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BookCatalog.API/BookCatalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="BookCatalog.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BookCatalog.API/BookCatalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="BookCatalog.Frontend: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BookCatalog.Frontend/BookCatalog.Frontend.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="BookCatalog.Frontend: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BookCatalog.Frontend/BookCatalog.Frontend.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <browser name="98ca6316-2f89-46d9-a9e5-fa9e2b0625b3" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="BookCatalog.Frontend: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/BookCatalog.Frontend/BookCatalog.Frontend.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="BookCatalog.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="bookcatalog.api" />
          <option name="contextFolderPath" value="C:\projects\blazor-book-catalog" />
          <option name="sourceFilePath" value="BookCatalog.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="BookCatalog.Frontend/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="bookcatalog.frontend" />
          <option name="contextFolderPath" value="C:\projects\blazor-book-catalog" />
          <option name="sourceFilePath" value="BookCatalog.Frontend/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.BookCatalog.API: http" />
      <item itemvalue=".NET Launch Settings Profile.BookCatalog.API: https" />
      <item itemvalue=".NET Launch Settings Profile.BookCatalog.API: IIS Express" />
      <item itemvalue=".NET Launch Settings Profile.BookCatalog.Frontend: http" />
      <item itemvalue=".NET Launch Settings Profile.BookCatalog.Frontend: https" />
      <item itemvalue=".NET Launch Settings Profile.BookCatalog.Frontend: IIS Express" />
      <item itemvalue="Compound.API + Frontend" />
      <item itemvalue="Docker.BookCatalog.API/Dockerfile" />
      <item itemvalue="Docker.BookCatalog.Frontend/Dockerfile" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1f264b09-a10a-4409-964e-b49258fcacf0" name="Changes" comment="" />
      <created>1736446400529</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1736446400529</updated>
      <workItem from="1736446402374" duration="9000" />
      <workItem from="1736446422175" duration="785000" />
      <workItem from="1736447225251" duration="159000" />
      <workItem from="1736447433585" duration="25131000" />
      <workItem from="1736506839518" duration="96000" />
      <workItem from="1736506947484" duration="12163000" />
    </task>
    <task id="LOCAL-00001" summary="Add initial solution structure for BookCatalog project&#10;&#10;This commit sets up the foundational structure of the BookCatalog project. It includes the API and Frontend projects, solution file, configuration files, sample data, and static assets. These changes provide the groundwork for further development.">
      <option name="closed" value="true" />
      <created>1736446624523</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1736446624523</updated>
    </task>
    <task id="LOCAL-00002" summary="Add GitHub Actions workflow for build and test&#10;&#10;This workflow automates building and testing on push or pull requests to the main branch. It includes steps for repository checkout, setting up .NET 7.0, restoring dependencies, and building the solution in release configuration.">
      <option name="closed" value="true" />
      <created>1736446801222</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1736446801222</updated>
    </task>
    <task id="LOCAL-00003" summary="Clean up generated and cache files from the project.&#10;&#10;Deleted unnecessary auto-generated files and build artifacts under the `obj` directory. This reduces clutter and ensures a cleaner repository state. Bootstrap library files were also removed from `wwwroot/lib` as part of this cleanup.">
      <option name="closed" value="true" />
      <created>1736447501851</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1736447501851</updated>
    </task>
    <task id="LOCAL-00004" summary="Add CRUD endpoints and Swagger support to API&#10;&#10;This commit introduces CRUD endpoints for managing books in the API, leveraging a `BookRepository` for data operations. Additionally, Swagger support is added for API documentation and testing, including custom extension methods to configure Swagger. These changes enhance the API's functionality and developer usability.">
      <option name="closed" value="true" />
      <created>1736452934078</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1736452934078</updated>
    </task>
    <task id="LOCAL-00005" summary="Add whitespace for readability in Program.cs&#10;&#10;A blank line was inserted to improve code readability and organization. This change has no functional impact but enhances the structure of the Program.cs file.">
      <option name="closed" value="true" />
      <created>1736453098346</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1736453098346</updated>
    </task>
    <task id="LOCAL-00006" summary="Add seed data to BookRepository for initial book collection&#10;&#10;This commit updates the `BookRepository` with a predefined list of seed data containing popular programming and software development books. This change enables the application to have an initial set of data for development and testing purposes without requiring external data setup.">
      <option name="closed" value="true" />
      <created>1736453770688</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1736453770688</updated>
    </task>
    <task id="LOCAL-00007" summary="Add seed data to BookRepository for initial book collection&#10;&#10;This commit updates the `BookRepository` with a predefined list of seed data containing popular programming and software development books. This change enables the application to have an initial set of data for development and testing purposes without requiring external data setup.">
      <option name="closed" value="true" />
      <created>1736453797430</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1736453797430</updated>
    </task>
    <task id="LOCAL-00008" summary="Add book management features and enable CORS in API&#10;&#10;This commit introduces full CRUD functionality for managing books, including pages for listing, adding, editing, and deleting books in the frontend. It also enables CORS in the API to support client-server communication and adjusts the frontend to target .NET 7. Additionally, navigation and models were updated to support proper data handling and UI improvements.">
      <option name="closed" value="true" />
      <created>1736493544963</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1736493544963</updated>
    </task>
    <task id="LOCAL-00009" summary="Remove sample Razor pages and add Docker support for deployment&#10;&#10;This commit deletes unused Razor pages (Counter, Home, and Weather) to streamline the frontend structure. Additionally, it introduces `docker-compose` and Dockerfiles for the API and frontend projects, enabling containerized deployment. Environment variable support for API base address is configured, with nginx set up for serving the frontend.">
      <option name="closed" value="true" />
      <created>1736496739413</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1736496739413</updated>
    </task>
    <task id="LOCAL-00010" summary="Streamline frontend and enable Docker-based deployment&#10;&#10;Removed unused Razor pages (Counter, Home, and Weather) to declutter the frontend. Added Docker support via `docker-compose` for API and frontend projects, enabling containerized deployment. Configured environment variables for API base address and updated navigation to improve user routing and experience.">
      <option name="closed" value="true" />
      <created>1736498513448</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1736498513448</updated>
    </task>
    <task id="LOCAL-00011" summary="Remove docker-compose.override.yml file&#10;&#10;The file was deleted as it is no longer needed. Environment configuration for the Blazor service should be handled elsewhere. This simplifies the setup and avoids redundant overrides.">
      <option name="closed" value="true" />
      <created>1736498996875</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1736498996875</updated>
    </task>
    <task id="LOCAL-00012" summary="Improve book filter UI and add responsive styling.&#10;&#10;Refactored the filter UI in Books.razor to enhance structure, styling, and responsiveness by using CSS classes and flexbox layout. Introduced a new Books.razor.css file to manage related styles, including handling responsive behavior for filter inputs. Minor formatting updates in index.html to ensure consistent coding standards.">
      <option name="closed" value="true" />
      <created>1736501607232</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1736501607232</updated>
    </task>
    <task id="LOCAL-00013" summary="Add sorting functionality to books listing&#10;&#10;Introduced sorting by title, author, and genre in both ascending and descending orders in the API and frontend. Updated the UI with sortable column headers and corresponding arrow indicators to reflect the sorting state. Adjusted the data fetching logic to include sorting parameters.">
      <option name="closed" value="true" />
      <created>1736502659534</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1736502659534</updated>
    </task>
    <task id="LOCAL-00014" summary="Add bulk upload functionality for books via CSV&#10;&#10;Introduced a new API endpoint and frontend capability to upload books in bulk using a CSV file. Included CSV parsing logic via `CsvHelper`, server-side handling in `BooksEndpoints`, and an updated UI for file upload in the books page.">
      <option name="closed" value="true" />
      <created>1736505987505</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1736505987505</updated>
    </task>
    <task id="LOCAL-00015" summary="Add rate limiting to the API&#10;&#10;Introduced a fixed window rate limiter with a &quot;General&quot; policy allowing 10 requests per minute per client and queued overflow of up to 2 requests. Configured rate limiting middleware and a test endpoint to verify functionality. Added the `System.Threading.RateLimiting` package and a batch script for stress testing.">
      <option name="closed" value="true" />
      <created>1736507775447</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1736507775447</updated>
    </task>
    <task id="LOCAL-00016" summary="Set .NET SDK version to 8.0.303 in global.json&#10;&#10;Added a new global.json file to specify the .NET SDK version. This ensures consistent development and builds across environments.">
      <option name="closed" value="true" />
      <created>1736507918418</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1736507918418</updated>
    </task>
    <task id="LOCAL-00017" summary="Integrate SignalR for real-time book updates&#10;&#10;Added SignalR support for real-time updates in both backend and frontend. Backend changes include a new `BooksHub` for notifications and updates to `BooksEndpoints`. Frontend now listens to real-time events like `BookAdded`, `BookUpdated`, and `BookDeleted` for dynamic UI refreshes. Additionally, logging and Serilog were configured for enhanced monitoring.">
      <option name="closed" value="true" />
      <created>1736515943147</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1736515943147</updated>
    </task>
    <option name="localTasksCounter" value="18" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Add initial solution structure for BookCatalog project&#10;&#10;This commit sets up the foundational structure of the BookCatalog project. It includes the API and Frontend projects, solution file, configuration files, sample data, and static assets. These changes provide the groundwork for further development." />
    <MESSAGE value="Add GitHub Actions workflow for build and test&#10;&#10;This workflow automates building and testing on push or pull requests to the main branch. It includes steps for repository checkout, setting up .NET 7.0, restoring dependencies, and building the solution in release configuration." />
    <MESSAGE value="Clean up generated and cache files from the project.&#10;&#10;Deleted unnecessary auto-generated files and build artifacts under the `obj` directory. This reduces clutter and ensures a cleaner repository state. Bootstrap library files were also removed from `wwwroot/lib` as part of this cleanup." />
    <MESSAGE value="Add CRUD endpoints and Swagger support to API&#10;&#10;This commit introduces CRUD endpoints for managing books in the API, leveraging a `BookRepository` for data operations. Additionally, Swagger support is added for API documentation and testing, including custom extension methods to configure Swagger. These changes enhance the API's functionality and developer usability." />
    <MESSAGE value="Add whitespace for readability in Program.cs&#10;&#10;A blank line was inserted to improve code readability and organization. This change has no functional impact but enhances the structure of the Program.cs file." />
    <MESSAGE value="Add seed data to BookRepository for initial book collection&#10;&#10;This commit updates the `BookRepository` with a predefined list of seed data containing popular programming and software development books. This change enables the application to have an initial set of data for development and testing purposes without requiring external data setup." />
    <MESSAGE value="Add book management features and enable CORS in API&#10;&#10;This commit introduces full CRUD functionality for managing books, including pages for listing, adding, editing, and deleting books in the frontend. It also enables CORS in the API to support client-server communication and adjusts the frontend to target .NET 7. Additionally, navigation and models were updated to support proper data handling and UI improvements." />
    <MESSAGE value="Remove sample Razor pages and add Docker support for deployment&#10;&#10;This commit deletes unused Razor pages (Counter, Home, and Weather) to streamline the frontend structure. Additionally, it introduces `docker-compose` and Dockerfiles for the API and frontend projects, enabling containerized deployment. Environment variable support for API base address is configured, with nginx set up for serving the frontend." />
    <MESSAGE value="Streamline frontend and enable Docker-based deployment&#10;&#10;Removed unused Razor pages (Counter, Home, and Weather) to declutter the frontend. Added Docker support via `docker-compose` for API and frontend projects, enabling containerized deployment. Configured environment variables for API base address and updated navigation to improve user routing and experience." />
    <MESSAGE value="Remove docker-compose.override.yml file&#10;&#10;The file was deleted as it is no longer needed. Environment configuration for the Blazor service should be handled elsewhere. This simplifies the setup and avoids redundant overrides." />
    <MESSAGE value="Improve book filter UI and add responsive styling.&#10;&#10;Refactored the filter UI in Books.razor to enhance structure, styling, and responsiveness by using CSS classes and flexbox layout. Introduced a new Books.razor.css file to manage related styles, including handling responsive behavior for filter inputs. Minor formatting updates in index.html to ensure consistent coding standards." />
    <MESSAGE value="Add sorting functionality to books listing&#10;&#10;Introduced sorting by title, author, and genre in both ascending and descending orders in the API and frontend. Updated the UI with sortable column headers and corresponding arrow indicators to reflect the sorting state. Adjusted the data fetching logic to include sorting parameters." />
    <MESSAGE value="Add bulk upload functionality for books via CSV&#10;&#10;Introduced a new API endpoint and frontend capability to upload books in bulk using a CSV file. Included CSV parsing logic via `CsvHelper`, server-side handling in `BooksEndpoints`, and an updated UI for file upload in the books page." />
    <MESSAGE value="Add rate limiting to the API&#10;&#10;Introduced a fixed window rate limiter with a &quot;General&quot; policy allowing 10 requests per minute per client and queued overflow of up to 2 requests. Configured rate limiting middleware and a test endpoint to verify functionality. Added the `System.Threading.RateLimiting` package and a batch script for stress testing." />
    <MESSAGE value="Set .NET SDK version to 8.0.303 in global.json&#10;&#10;Added a new global.json file to specify the .NET SDK version. This ensures consistent development and builds across environments." />
    <MESSAGE value="Integrate SignalR for real-time book updates&#10;&#10;Added SignalR support for real-time updates in both backend and frontend. Backend changes include a new `BooksHub` for notifications and updates to `BooksEndpoints`. Frontend now listens to real-time events like `BookAdded`, `BookUpdated`, and `BookDeleted` for dynamic UI refreshes. Additionally, logging and Serilog were configured for enhanced monitoring." />
    <option name="LAST_COMMIT_MESSAGE" value="Integrate SignalR for real-time book updates&#10;&#10;Added SignalR support for real-time updates in both backend and frontend. Backend changes include a new `BooksHub` for notifications and updates to `BooksEndpoints`. Frontend now listens to real-time events like `BookAdded`, `BookUpdated`, and `BookDeleted` for dynamic UI refreshes. Additionally, logging and Serilog were configured for enhanced monitoring." />
  </component>
</project>